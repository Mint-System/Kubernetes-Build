apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      # initContainers:
      #   - name: cleaner
      #     image: alpine
      #     command: ["/bin/sh", "-c", "rm -rf /mnt/*"]
      #     volumeMounts:
      #       - name: postgresdb
      #         mountPath: /mnt
      containers:
        - name: postgres
          image: {{.Values.image }}
          ports:
            - containerPort: {{ .Values.port }}
          env:
            - name: POSTGRES_DB
              value: {{ .Values.db }}
            - name: POSTGRES_USER
              value: {{ .Values.user }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secretRef }}
                  key: {{ .Values.userPasswordKey }}
            - name: PGDATABASE
              value: {{ .Values.db }}
            - name: PGUSER
              value: {{ .Values.user }}
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secretRef }}
                  key: {{ .Values.userPasswordKey }}
          volumeMounts:
            - mountPath: /var/lib/postgresql/data/
              name: postgresdb
      volumes:
        - name: postgresdb
          persistentVolumeClaim:
            claimName: data-postgres
