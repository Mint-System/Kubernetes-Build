apiVersion: apps/v1
kind: Deployment
metadata:
  name: odoo
  labels:
    app: odoo
spec:
  selector:
    matchLabels:
      app: odoo
  template:
    metadata:
      labels:
        app: odoo
    spec:
      {{- if .Values.vshnPostgres.enabled }}
      volumes:
      - name: {{ .Values.vshnPostgres.odooSecretRef }}
        secret:
          defaultMode: 0600
          secretName: {{ .Values.vshnPostgres.odooSecretRef }}
      {{- end }}
      initContainers:
        - name: init
          image: {{ .Values.odoo.image }}
          imagePullPolicy: Always
          command:
            - /bin/bash
            - -c
            - |
              {{- if .Values.odoo.downloadOdooEnterprise }}/entrypoint.sh download-odoo-enterprise && \{{- end }}
              /entrypoint.sh git-clone-addons && \
              /entrypoint.sh init-db
          envFrom:
            - secretRef:
                name: {{ .Values.odoo.secretRef }}
            - configMapRef:
                name: {{ .Values.odoo.configMapRef }}
          env:
            {{- if .Values.postgres.enabled }}
            - name: PGHOST
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgres.secretRef }}
                  key: POSTGRES_HOST
            - name: PGPORT
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgres.secretRef }}
                  key: POSTGRES_PORT
            - name: PGUSER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgres.secretRef }}
                  key: POSTGRES_USER
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgres.secretRef }}
                  key: POSTGRES_PASSWORD
            - name: ODOO_DATABASE
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgres.secretRef }}
                  key: POSTGRES_DB
            {{- end }}
            {{- if .Values.vshnPostgres.enabled }}
            - name: PGHOST
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.vshnPostgres.odooSecretRef }}
                  key: POSTGRESQL_HOST
            - name: PGPORT
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.vshnPostgres.odooSecretRef }}
                  key: POSTGRESQL_PORT
            - name: PGUSER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.vshnPostgres.odooSecretRef }}
                  key: POSTGRESQL_USER
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.vshnPostgres.odooSecretRef }}
                  key: POSTGRESQL_PASSWORD
            - name: ODOO_DATABASE
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.vshnPostgres.odooSecretRef }}
                  key: POSTGRESQL_DB
            - name: PGSSLMODE
              value: verify-ca
            - name: PGSSLROOTCERT
              value: "/mnt/{{ .Values.vshnPostgres.odooSecretRef }}/ca.crt"
            {{- end }}
          {{- if .Values.vshnPostgres.enabled }}
          volumeMounts:
          - name: {{ .Values.vshnPostgres.odooSecretRef }}
            readOnly: true
            mountPath: "/mnt/{{ .Values.vshnPostgres.odooSecretRef }}"
          {{- end }}
      containers:
        - name: {{ .Values.odoo.host }}
          image: {{ .Values.odoo.image }}
          ports:
          - containerPort: 8069
          envFrom:
            - secretRef:
                name: {{ .Values.odoo.secretRef }}
            - configMapRef:
                name: {{ .Values.odoo.configMapRef }}
          env:
            {{- if .Values.postgres.enabled }}
            - name: PGHOST
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgres.secretRef }}
                  key: POSTGRES_HOST
            - name: PGPORT
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgres.secretRef }}
                  key: POSTGRES_PORT
            - name: PGUSER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgres.secretRef }}
                  key: POSTGRES_USER
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgres.secretRef }}
                  key: POSTGRES_PASSWORD
            - name: ODOO_DATABASE
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgres.secretRef }}
                  key: POSTGRES_DB
            {{- end }}
            {{- if .Values.vshnPostgres.enabled }}
            - name: PGHOST
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.vshnPostgres.odooSecretRef }}
                  key: POSTGRESQL_HOST
            - name: PGPORT
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.vshnPostgres.odooSecretRef }}
                  key: POSTGRESQL_PORT
            - name: PGUSER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.vshnPostgres.odooSecretRef }}
                  key: POSTGRESQL_USER
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.vshnPostgres.odooSecretRef }}
                  key: POSTGRESQL_PASSWORD
            - name: ODOO_DATABASE
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.vshnPostgres.odooSecretRef }}
                  key: POSTGRESQL_DB
            - name: PGSSLMODE
              value: verify-ca
            - name: PGSSLROOTCERT
              value: "/mnt/{{ .Values.vshnPostgres.odooSecretRef }}/ca.crt"
            {{- end }}
          {{- if .Values.vshnPostgres.enabled }}
          volumeMounts:
          - name: {{ .Values.vshnPostgres.odooSecretRef }}
            readOnly: true
            mountPath: "/mnt/{{ .Values.vshnPostgres.odooSecretRef }}"
          {{- end }}