apiVersion: apps/v1
kind: Deployment
metadata:
  name: odoo
  labels:
    app: odoo
spec:
  selector:
    matchLabels:
      app: odoo
  template:
    metadata:
      labels:
        app: odoo
    spec:
      # {{- if .Values.vshnPostgres.enabled }}
      # volumes:
      # - name: {{ .Values.vshnPostgres.secretRef }}
      #   secret:
      #     defaultMode: 0600
      #     secretName: {{ .Values.vshnPostgres.secretRef }}
      # {{- end }}
      initContainers:
        - name: init
          image: {{ .Values.odoo.image }}
          imagePullPolicy: Always
          command:
            - /bin/bash
            - -c
            - |
              {{- if .Values.odoo.downloadOdooEnterprise }}/entrypoint.sh download-odoo-enterprise && \{{- end }}
              /entrypoint.sh git-clone-addons && \
              /entrypoint.sh init-db
          envFrom:
            - secretRef:
                name: {{ .Values.odoo.secretRef }}
            - configMapRef:
                name: {{ .Values.odoo.configMapRef }}
          env:
            {{- if .Values.postgresql.enabled }}
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: odoo-postgresql
                  key: postgres-password
            - name: PGHOST
              value: postgresql.{{ .Release.Namespace }}.svc.cluster.local
            - name: PGUSER
              value: {{ .Values.postgresql.auth.username }}
            {{- end }}
            {{- if .Values.vshnPostgres.enabled }}
            - name: PGHOST
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.vshnPostgres.secretRef }}
                  key: POSTGRESQL_HOST
            - name: PGPORT
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.vshnPostgres.secretRef }}
                  key: POSTGRESQL_PORT
            - name: PGUSER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.vshnPostgres.secretRef }}
                  key: POSTGRESQL_USER
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.vshnPostgres.secretRef }}
                  key: POSTGRESQL_PASSWORD
            - name: PGSSLMODE
              value: verify-ca
            - name: PGSSLROOTCERT
              value: "/mnt/{{ .Values.vshnPostgres.secretRef }}/ca.crt"
            {{- end }}
          {{- if .Values.vshnPostgres.enabled }}
          volumeMounts:
          - name: {{ .Values.vshnPostgres.secretRef }}
            readOnly: true
            mountPath: "/mnt/{{ .Values.vshnPostgres.secretRef }}"
          {{- end }}
      containers:
        - name: {{ .Values.odoo.host }}
          image: {{ .Values.odoo.image }}
          ports:
          - containerPort: 8069
          envFrom:
            - secretRef:
                name: {{ .Values.odoo.secretRef }}
            - configMapRef:
                name: {{ .Values.odoo.configMapRef }}
          env:
            {{- if .Values.postgresql.enabled }}
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: odoo-postgresql
                  key: postgres-password
            - name: PGHOST
              value: postgresql.{{ .Release.Namespace }}.svc.cluster.local
            - name: PGPORT
            - name: PGUSER
            {{- end }}
            {{- if .Values.vshnPostgres.enabled }}
            - name: PGHOST
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.vshnPostgres.secretRef }}
                  key: POSTGRESQL_HOST
            - name: PGPORT
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.vshnPostgres.secretRef }}
                  key: POSTGRESQL_PORT
            - name: PGUSER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.vshnPostgres.secretRef }}
                  key: POSTGRESQL_USER
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.vshnPostgres.secretRef }}
                  key: POSTGRESQL_PASSWORD
            - name: PGSSLMODE
              value: verify-ca
            - name: PGSSLROOTCERT
              value: "/mnt/{{ .Values.vshnPostgres.secretRef }}/ca.crt"
            {{- end }}
          # {{- if .Values.vshnPostgres.enabled }}
          # volumeMounts:
          # - name: {{ .Values.vshnPostgres.secretRef }}
          #   readOnly: true
          #   mountPath: "/mnt/{{ .Values.vshnPostgres.secretRef }}"
          # {{- end }}
